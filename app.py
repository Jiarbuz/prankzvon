import os
import datetime
import threading
import requests
from flask import Flask, request, session
from flask_babel import Babel
from user_agents import parse
from dotenv import load_dotenv
from flask import Flask, render_template, request, session, redirect, url_for

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
chat_id = os.getenv("TELEGRAM_CHAT_ID")

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ
def send_telegram_message(text):
    if not bot_token or not chat_id:
        print("–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ chat_id –¥–ª—è Telegram")
        return
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    try:
        requests.post(url, data=data)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)
app.secret_key = '1bcb3078b20ca1ad5f223f4fb9a2ca34a2aaeec55971bd69f8d539dc1c6a99e3'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Babel –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
app.config['BABEL_DEFAULT_LOCALE'] = 'ru'
babel = Babel(app)

def get_locale():
    return session.get('lang', 'ru')

babel.locale_selector_func = get_locale

# –ü–æ–ª–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
translations = {
    'ru': {
        'info_title': "PrankVzlom üìπüìî",
        'disclaimer': "–°–ê–ô–¢ –°–î–ï–õ–ê–ù –î–õ–Ø –†–ê–ó–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–´–• –¶–ï–õ–ï–ô –ò –ú–´ –ù–ò–ö–û–ì–û –ù–ï –•–û–¢–ò–ú –û–°–ö–û–†–ë–ò–¢–¨ –ò–õ–ò –£–ù–ò–ó–ò–¢–¨",
        'software': "–°–æ—Ñ—Ç—ã",
        'admins': "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è",
        'partners': "–ü–∞—Ä—Ç–Ω—ë—Ä—ã",
        'main_admin': "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        'creators': "–°–æ–∑–¥–∞—Ç–µ–ª–∏",
        'senior_admins': "–°—Ç–∞—Ä—à–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã",
        'junior_admins': "–ú–ª–∞–¥—à–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã",
        'senior_mods': "–°—Ç–∞—Ä—à–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã",
        'copyright': "¬© 2025 PrankVzlom. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.",
        'accept': "–ü—Ä–∏–Ω—è—Ç—å",
        'modal_title': "–í–ù–ò–ú–ê–ù–ò–ï",
        'modal_content': "–≠—Ç–æ—Ç —Å–∞–π—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö. –ú—ã –Ω–µ —Ö–æ—Ç–∏–º –Ω–∏–∫–æ–≥–æ –æ—Å–∫–æ—Ä–±–∏—Ç—å –∏–ª–∏ —É–Ω–∏–∑–∏—Ç—å.",
        'links': {
            'official_channel': "–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ö–ê–ù–ê–õ",
            'redirect': "–ü–ï–†–ï–•–û–î–ù–ò–ö",
            'chat': "–ß–ê–¢",
            'tutorial': "–¢–£–¢–û–†–ò–ê–õ –ü–û –ö–ê–ú–ï–†–ê–ú",
            'audio': "–ê–£–î–ò–û –ö–ê–ù–ê–õ",
            'bot': "–ë–û–¢",
            'tiktok': "–¢–ò–ö –¢–û–ö",
            'support': "–ü–û–î–î–ï–†–ñ–ö–ê"
        },
        'partner_owl': "–°–∫–æ—Ä–æ..."
    },
    'en': {
        'info_title': "PrankVzlom üìπüìî",
        'disclaimer': "THIS SITE IS FOR ENTERTAINMENT PURPOSES ONLY AND WE DON'T WANT TO OFFEND OR HUMILIATE ANYONE",
        'software': "Software",
        'admins': "Administration",
        'partners': "Partners",
        'main_admin': "Main Admin",
        'creators': "Creators",
        'senior_admins': "Senior Admins",
        'junior_admins': "Junior Admins",
        'senior_mods': "Senior Moderators",
        'copyright': "¬© 2025 PrankVzlom. All rights reserved.",
        'accept': "Accept",
        'modal_title': "WARNING",
        'modal_content': "This site is made for entertainment purposes only. We don't want to offend or humiliate anyone.",
        'links': {
            'official_channel': "OFFICIAL CHANNEL",
            'redirect': "REDIRECT",
            'chat': "CHAT",
            'tutorial': "CAMERA TUTORIAL",
            'audio': "AUDIO CHANNEL",
            'bot': "BOT",
            'tiktok': "TIKTOK",
            'support': "SUPPORT"
        },
        'partner_owl': "Soon..."
    }
}

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def index():
    lang = session.get('lang', 'ru')
    t = translations[lang]
    
    site_data = {
        "info": {
            "title": t['info_title'],
            "description": t['disclaimer'],
            "links": [
                {"name": t['links']['official_channel'], "url": "https://t.me/+_dzIExBP_yViZDk9"},
                {"name": t['links']['redirect'], "url": "https://t.me/prankzvon"},
                {"name": t['links']['chat'], "url": "https://t.me/+gUAplPwH9GhiMDg1"},
                {"name": t['links']['tutorial'], "url": "https://t.me/+1ZZKZBWjTHxjMDQ8"},
                {"name": t['links']['audio'], "url": "https://t.me/+Y77I8AtvLNM0OGUy"},
                {"name": t['links']['bot'], "url": "https://t.me/prankvzlomnewbot"},
                {"name": t['links']['tiktok'], "url": "https://www.tiktok.com/@jiarbuz"},
                {"name": t['links']['support'], "url": "https://t.me/PrankVzlomUnban"}
            ]
        },
        "software": [
            {"name": "SmartPSS", "url": "https://cloud.mail.ru/public/11we/vbzNxnSQi"},
            {"name": "Nesca", "url": "https://cloud.mail.ru/public/J2sJ/3vuy7XC1n"},
            {"name": "Noon", "url": "https://cloud.mail.ru/public/4Cmj/yMeVGQXE6"},
            {"name": "Ingram", "url": "https://cloud.mail.ru/public/nPCQ/JA73sB4tq"},
            {"name": "SoundPad", "url": "https://mega.nz/file/Ck4jhZBL#bXmvrKCquhJrt2hMlHiV2QfpzMm3uj_lLjv9yFLEjgA"},
            {"name": "iVMS-4200", "url": "https://cloud.mail.ru/public/8t1M/g5zfvA8Lq"},
            {"name": "MVFPS", "url": "https://cloud.mail.ru/public/26ae/58VrzdvYT"},
            {"name": "KPortScan", "url": "https://cloud.mail.ru/public/yrup/9PQyDe86G"}
        ],
        "admins": {
            t['main_admin']: [
                {
                    "name": "–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π –ë–µ—Å", 
                    "url": "https://t.me/bes689",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-25_06-19-13.jpg"
                }
            ],
            t['creators']: [
                {
                    "name": "Everyday", 
                    "url": "https://t.me/mobile_everyday",
                    "avatar": "https://i.ibb.co/spKRJcmK/photo-2025-05-23-16-45-24.jpg"
                },
                {
                    "name": "–ê–Ω–¥—Ä–µ–π", 
                    "url": "https://t.me/prankzvon231",
                    "avatar": None
                },
                {
                    "name": "Lucper", 
                    "url": "https://t.me/lucper1",
                    "avatar": "https://i.ibb.co/TMbSG0jp/photo-2025-07-20-01-44-45-2.gif"
                }
            ],
            t['senior_admins']: [
                {
                    "name": "–î–∏–≤–∞–Ω–Ω—ã–π –≤–æ–∏–Ω –ö—á–∞—É", 
                    "url": "https://t.me/bestanov",
                    "avatar": "https://i.ibb.co/rKLcJ70c/photo-2025-04-23-02-37-37.jpg"
                },
                {
                    "name": "JIARBUZ.exe", 
                    "url": "https://t.me/jiarbuz",
                    "avatar": "https://i.ibb.co/kgBVDqM8/photo-2025-06-10-15-16-39.jpg"
                },
                {
                    "name": "ximi13p", 
                    "url": "https://t.me/ximi13p",
                    "avatar": None
                }
            ],
            t['junior_admins']: [
                {
                    "name": "k3stovski", 
                    "url": "https://t.me/k3stovski",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-24_23-01-05.jpg"
                },
                {
                    "name": "krona—Ñacia", 
                    "url": "https://t.me/kronaphasia",
                    "avatar": None
                },
                {
                    "name": "–ñ—É–∫", 
                    "url": "https://t.me/werwse",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-23_22-07-41.md.jpg"
                },
                {
                    "name": "–¶—ã—Ñ—Ä–∞", 
                    "url": "https://t.me/himera_unturned",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-01_00-52-02.md.jpg"
                },
                {
                    "name": "–ù–∞–ø–æ–ª–µ–æ–Ω—Å–∫–∏–π –ø–∏—Å—Ç–æ–ª—ç—Ç", 
                    "url": "https://t.me/prnkzvn",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-20_04-28-28.jpg"
                }
            ],
            t['senior_mods']: [
                {
                    "name": "Paul Du Rove", 
                    "url": "tg://openmessage?user_id=7401067755",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-05-03_16-27-45.jpg"
                },
                {
                    "name": "aiocryp", 
                    "url": "https://t.me/aiocryp",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-25_00-37-50.jpg"
                },
                {
                    "name": "—Å–∞–Ω—è —à–ø–∞–ª–∏–Ω", 
                    "url": "https://t.me/sanya_shpalka",
                    "avatar": "https://ltdfoto.ru/images/2025/07/25/photo_2025-07-22_03-52-56.md.jpg"
                }
            ]
        },
        "partners": [
            {
                "name": t['partner_owl'],
                "url": "https://youtu.be/dQw4w9WgXcQ",
                "avatar": "https://cdn-icons-png.flaticon.com/512/8890/8890972.png"
            }
        ],
        "translations": t
    }
    return render_template('index.html', data=site_data, current_lang=lang)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞
@app.route('/set_language/<lang>')
def set_language(lang):
    if lang in ['ru', 'en']:
        session['lang'] = lang
    return redirect(request.referrer or url_for('index'))

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ IP –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ
@app.before_request
def log_visitor_info():
    if 'logged_ips' not in session:
        session['logged_ips'] = []

    ip = request.remote_addr
    if ip in session['logged_ips']:
        return

    session['logged_ips'].append(ip)
    session.modified = True

    ua = parse(request.headers.get('User-Agent', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'))
    browser = f"{ua.browser.family} {ua.browser.version_string}"
    os_name = f"{ua.os.family} {ua.os.version_string}"
    device = f"{ua.device.family}"
    now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    message = (
        f"üì° <b>–ù–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å</b>\n"
        f"üïí –í—Ä–µ–º—è: {now}\n"
        f"üåê IP: <code>{ip}</code>\n"
        f"üåç OS: {os_name}\n"
        f"üåê Browser: {browser}\n"
        f"üì± Device: {device}\n"
        f"üìç –°—Ç—Ä–∞–Ω–∏—Ü–∞: {request.path}"
    )

    threading.Thread(target=send_telegram_message, args=(message,)).start()

    # –ü–µ—á–∞—Ç—å —Ç–æ–∫–µ–Ω–∞ –∏ —á–∞—Ç–∞ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–∑–∂–µ)
    print(f"BOT TOKEN: {bot_token}")
    print(f"CHAT ID: {chat_id}")


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_message(text: str) -> bool:
    if not bot_token or not chat_id:
        print("Telegram bot token or chat id not set.")
        return False

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }

    try:
        response = requests.post(url, json=data, timeout=5)
        print(f"Telegram send response: {response.status_code} - {response.text}")
        response.raise_for_status()
        return True
    except Exception as e:
        print(f"Error sending Telegram message: {e}")
        return False

if __name__ == '__main__':
    app.run(debug=True)
